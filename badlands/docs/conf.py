#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Badlands documentation build configuration file, created by
# sphinx-quickstart on Thu Feb 16 12:03:54 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
import os
import sys
sys.path.insert(0, os.path.abspath('../badlands/'))

import sphinx_rtd_theme

from sphinx.builders.html import (StandaloneHTMLBuilder, DirectoryHTMLBuilder,
                                  SingleFileHTMLBuilder)

# Redefine supported_image_types for the HTML builder
html_img_types = ['image/gif', 'image/svg+xml', 'image/png', 'image/jpeg']
StandaloneHTMLBuilder.supported_image_types = html_img_types
DirectoryHTMLBuilder.supported_image_types = html_img_types
SingleFileHTMLBuilder.supported_image_types = html_img_types

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.viewcode', 'sphinx.ext.todo',
              'sphinxcontrib.napoleon', 'sphinx.ext.autodoc',
              'sphinxemoji.sphinxemoji']
numfig = True

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = 'badlands'
copyright = '2019, Badlands Group - University of Sydney.'
author = 'Tristan Salles'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = 'master'
# The full version, including alpha/beta/rc tags.
release = 'master'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# exclude_dirnames = ['doc', 'env']

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = 'sphinx'
# pygments_style = 'native'
pygments_style = 'monokai'
# pygments_style = 'default'
sphinxemoji_style = 'twemoji'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
html_theme = 'sphinx_rtd_theme'

html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]
html_logo = 'img/logo2.png'
html_theme_options = {
    'logo_only': True,
    'display_version': False,
}

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
#html_static_path = ['_static']

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'badlandsdoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    'fncychap': '\\usepackage[Sonny]{fncychap}',
    'figure_align': 'tbh'
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}
latex_engine = 'pdflatex'
latex_logo = 'img/logo_latex.pdf'

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'badlands.tex', 'badlands Documentation',
     'Tristan Salles', 'manual'),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'badlands', 'Badlands Documentation',
     [author], 1)
]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'badlands', 'Badlands Documentation',
     author, 'badlands', 'One line description of project.',
     'Miscellaneous'),
]


# -- Mock utils
# utils contains binary (FORTRAN and C) code for the performance-sensitive
# parts of Badlands. readthedocs can't compile or load this, so we mock it
# out.
# See also http://docs.readthedocs.io/en/latest/faq.html#i-get-import-errors-on-libraries-that-depend-on-c-modules

import sys
from mock import Mock as MagicMock

class Mock(MagicMock):
    @classmethod
    def __getattr__(cls, name):
        return MagicMock()

MOCK_MODULES = ['gflex', 'scikit-image', 'h5py', 'matplotlib', 'pandas',
    'scipy', 'scipy.interpolate', 'scipy.ndimage', 'tribad', 'skimage',
    'scipy.ndimage.filters', 'scipy.spatial','matplotlib.path']

for m in MOCK_MODULES:
    sys.modules[m] = Mock()
